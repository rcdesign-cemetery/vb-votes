<?xml version="1.0" encoding="ISO-8859-1"?>

<product productid="vbvotes" active="1">
	<title>vB Votes</title>
	<description>User voting for useful content</description>
	<version>0.9</version>
	<url />
	<versioncheckurl />
	<apm_releasedate>0</apm_releasedate>
	<apm_author />
	<apm_relatedurl />
	<apm_extrainfo />
	<apm_extraedit />
	<dependencies>
	</dependencies>
	<codes>
		<code version="0.1">
			<installcode><![CDATA[$db->hide_errors();
$vbulletin->db->query_write("
CREATE TABLE IF NOT EXISTS " . TABLE_PREFIX . "votes (
  `targetid` int(11) NOT NULL,
  `contenttypeid` INT NOT NULL,
  `vote` enum('1','-1') NOT NULL,
  `fromuserid` int(11) NOT NULL,
  `touserid` int(11) NOT NULL,
  `date` int(11) NOT NULL,
  PRIMARY KEY (`targetid`, `contenttypeid`, `vote`, `fromuserid`),
  KEY `given_votes` (`fromuserid`, `vote`, `targetid`, `contenttypeid`),
  KEY `received_votes` (`touserid`, `vote`, `targetid`, `contenttypeid`),
  KEY `votes_per_day` (`fromuserid`, `date`),
  KEY `date` (`date`, `vote`, `contenttypeid`, `targetid`)
)");
$db->query_write("ALTER TABLE " . TABLE_PREFIX . "user ADD INDEX `votes_user_name` ( `userid` , `username` ) ");
$db->show_errors();]]></installcode>
			<uninstallcode><![CDATA[$db->hide_errors();
$vbulletin->db->query_write("DROP TABLE IF EXISTS " . TABLE_PREFIX . "post_votes");
$db->query_write("ALTER TABLE " . TABLE_PREFIX . "user DROP INDEX votes_user_name");
$db->show_errors();]]></uninstallcode>
		</code>
	</codes>
	<templates>
		<template name="sg_vote_buttons" templatetype="template" date="1290587794" username="admin" version="0.8"><![CDATA[<a <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if> class="votepos" href="{vb:raw vote_link}&amp;value=1" rel="nofollow" name="PostVote::Positive::{vb:raw target_id}" id="PostVote::Positive::{vb:raw target_id}" title="{vb:rawphrase vbv_positive_vote}"><img src="{vb:raw vboptions.cleargifurl}" id="voteposimg_{vb:raw target_id}" alt="{vb:rawphrase vbv_positive_vote}" />&nbsp;</a>
<vb:if condition="$show['negative']">
<a <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if> title="{vb:rawphrase vbv_negative_vote}" class="voteneg" href="{vb:raw vote_link}&amp;value=0" rel="nofollow" name="PostVote::Negative::{vb:raw target_id}" id="PostVote::Negative::{vb:raw target_id}"><img src="{vb:raw vboptions.cleargifurl}" id="votenegimg_{vb:raw target_id}" alt="{vb:rawphrase vbv_negative_vote}" />&nbsp;</a>
</vb:if>]]></template>
		<template name="sg_vote_buttons_css" templatetype="template" date="1290578397" username="Jannie" version="0.8"><![CDATA[<style type="text/css">
.votepos {
    background: url({vb:stylevar imgdir_button}/vote_pos.png) no-repeat center left;
    padding-{vb:stylevar left}:20px !important;
}
.votepos:hover {
    background: url({vb:stylevar imgdir_button}/vote_pos-hover.png) no-repeat center left;
    text-decoration: none;
}
.voteneg {
    background: url({vb:stylevar imgdir_button}/vote_neg.png) no-repeat center left;
    padding-{vb:stylevar left}:20px !important;
}
.voteneg:hover {
    background: url({vb:stylevar imgdir_button}/vote_neg-hover.png) no-repeat center left;
    text-decoration: none;
}
</style>]]></template>
		<template name="sg_vote_info" templatetype="template" date="1290580593" username="admin" version="0.8"><![CDATA[<vb:if condition="$votes['vote_list']">
    <div style="display:block;">
        <div class="votes_container votes_container_{vb:raw votes['vote_type']}">
            {vb:raw votes['post_user_votes']}&nbsp;{vb:raw votes['vote_list']}
            <div class="remove-vote-links">
            <vb:if condition="$votes['remove_vote_link']">
                <a href="{vb:raw votes['remove_vote_link']}&amp;targetid={vb:raw votes['target_id']}" rel="nofollow" name="RemoveVote::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" id="RemoveVote::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" >{vb:rawphrase vbv_post_vote_remove_user_vote}</a>
            </vb:if>
            <vb:if condition="$votes['remove_all_votes_link']">
                &nbsp;<a href="{vb:raw votes['remove_all_votes_link']}&amp;targetid={vb:raw votes['target_id']}" rel="nofollow" name="RemoveVote::All::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" id="RemoveVote::All::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" >{vb:rawphrase vbv_post_vote_remove_all_votes}</a>
            </vb:if>
            </div>
        </div>
    </div>
</vb:if>]]></template>
		<template name="sg_vote_info_css" templatetype="template" date="1290585682" username="Jannie" version="0.8"><![CDATA[<style type="text/css">
.vote_info_container {
    margin-{vb:stylevar left}:{vb:math {vb:stylevar avatar_height} + {vb:stylevar padding} * 2};
    clear:both;
    font-size: {vb:stylevar mid_fontSize};
    border-top:{vb:stylevar vbblog_bloglist_border};
    border-bottom:{vb:stylevar vbblog_bloglist_border};
}
.votes_container {
    margin: {vb:stylevar padding} {vb:stylevar padding};
    overflow: hidden;
    padding-left:30px;
}
.votes_container_Negative {
    background: url({vb:stylevar imgdir_button}/vote_neg.png) no-repeat {vb:stylevar left} 0px;
}
.votes_container_Positive {
    background: url({vb:stylevar imgdir_button}/vote_pos.png) no-repeat 7px 0px;
}
.remove-vote-links {
    text-align:right;
    float:right;
    font-size: {vb:stylevar small_fontSize};
}
.remove-vote-links a {
    padding-left: 10px;
    color: {vb:stylevar shade_color};
}
</style> ]]></template>
		<template name="sg_vote_info_wrapper" templatetype="template" date="1290581679" username="admin" version="0.8"><![CDATA[<div class="vote_info_container" id="Vote_message_{vb:raw target_id}" <vb:if condition="!$vote_results OR $show['vote_result_hide']">style="display: none;"</vb:if>>{vb:raw votes}</div>]]></template>
		<template name="vote_buttons_css" templatetype="template" date="1290564295" username="admin" version="0.8"><![CDATA[<style type="text/css">
.postbitlegacy .postfoot .textcontrols a.votepos, .postbit .postfoot .textcontrols a.votepos  {
    background: url({vb:stylevar imgdir_button}/vote_pos.png) no-repeat {vb:stylevar postbit_control_background} {vb:stylevar left};
    padding: {vb:stylevar postbit_control_padding};
    padding-{vb:stylevar left}: {vb:math {vb:stylevar postbit_control_padding}+20};
    border: {vb:stylevar postbit_control_border};
}
.postbitlegacy .postfoot .textcontrols a.votepos:hover, .postbit .postfoot .textcontrols a.votepos:hover  {
    background: url({vb:stylevar imgdir_button}/vote_pos-hover.png) no-repeat {vb:stylevar postbit_control_hover_background} {vb:stylevar left};
    padding: {vb:stylevar postbit_control_padding};
    padding-{vb:stylevar left}: {vb:math {vb:stylevar postbit_control_padding}+20};
    border: {vb:stylevar postbit_control_hover_border};
}

.postbitlegacy .postfoot .textcontrols a.voteneg, .postbit .postfoot .textcontrols a.voteneg  {
    background: url({vb:stylevar imgdir_button}/vote_neg.png) no-repeat {vb:stylevar postbit_control_background} {vb:stylevar left};
    padding: {vb:stylevar postbit_control_padding};
    padding-{vb:stylevar left}: {vb:math {vb:stylevar postbit_control_padding}+20};
    border: {vb:stylevar postbit_control_border};
}
.postbitlegacy .postfoot .textcontrols a.voteneg:hover, .postbit .postfoot .textcontrols a.voteneg:hover  {
    background: url({vb:stylevar imgdir_button}/vote_neg-hover.png) no-repeat {vb:stylevar postbit_control_hover_background} {vb:stylevar left};
    padding: {vb:stylevar postbit_control_padding};
    padding-{vb:stylevar left}: {vb:math {vb:stylevar postbit_control_padding}+20};
    border: {vb:stylevar postbit_control_hover_border};
}
.votes_container {
    margin: {vb:stylevar padding} {vb:stylevar padding};
    overflow: hidden;
    padding-left:30px;
}
.votes_container_Negative {
    background: url({vb:stylevar imgdir_button}/vote_neg.png) no-repeat {vb:stylevar left} 0px;
}
.votes_container_Positive {
    background: url({vb:stylevar imgdir_button}/vote_pos.png) no-repeat 7px 0px;
}
.vote-info-container {
    font-size: {vb:stylevar mid_fontSize};
    float:none;
    display:block;
    background: {vb:stylevar postbit_background};
}
.remove-vote-links {
    text-align:right;
    float:right;
    font-size: {vb:stylevar small_fontSize};
}
.remove-vote-links a {
    padding-left: 10px;
}
</style>]]></template>
		<template name="vote_js" templatetype="template" date="1279025348" username="varnak" version="0.4"><![CDATA[<script type="text/javascript" src="clientscript/votes.js?v={vb:raw version}"></script>
        ]]></template>
		<template name="vote_navbar_toplinks" templatetype="template" date="1279554316" username="varnak" version="0.4"><![CDATA[<vb:if condition="$show['positive']">
    <li><a href="{vb:raw links.top_positive}">{vb:rawphrase vbv_positive_votes_search, {vb:raw day_limit}}</a></li>
</vb:if>
<vb:if condition="$show['negative']">
    <li><a href="{vb:raw links.top_negative}">{vb:rawphrase vbv_negative_votes_search, {vb:raw day_limit}}</a></li>
</vb:if>]]></template>
		<template name="vote_postbit_buttons" templatetype="template" date="1280307082" username="varnak" version="0.4"><![CDATA[<span class="seperator" id="vote_pos_sep_{vb:raw target_id}" <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if>>&nbsp;</span>
            <a class="votepos" href="{vb:raw vote_link}&amp;value=1" rel="nofollow" name="PostVote::Positive::{vb:raw target_id}" id="PostVote::Positive::{vb:raw target_id}" <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if> ><img src="{vb:raw vboptions.cleargifurl}" id="voteposimg_{vb:raw target_id}" alt="{vb:rawphrase vbv_positive_vote}" />  {vb:rawphrase vbv_positive_vote_link}</a>
            <vb:if condition="$show['negative']">
                <span class="seperator" id="vote_neg_sep_{vb:raw target_id}" <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if> >&nbsp;</span>
                <a title="{vb:rawphrase vbv_negative_vote}" class="voteneg" href="{vb:raw vote_link}&amp;value=0" rel="nofollow" name="PostVote::Negative::{vb:raw target_id}" id="PostVote::Negative::{vb:raw target_id}" <vb:if condition="$target_buttons_hide">style="display: none;"</vb:if> ><img src="{vb:raw vboptions.cleargifurl}" id="votenegimg_{vb:raw target_id}" alt="{vb:rawphrase vbv_negative_vote}" />&nbsp;</a>
            </vb:if>]]></template>
		<template name="vote_postbit_info" templatetype="template" date="1290495659" username="admin" version="0.8"><![CDATA[<vb:if condition="$votes['vote_list']">
    <div style="display:block;">
        <div class="votes_container votes_container_{vb:raw votes['vote_type']}">
            {vb:raw votes['post_user_votes']} {vb:raw votes['vote_list']}
            <vb:if condition="$votes['remove_all_votes_link'] OR $votes['remove_vote_link']">
            <div class="remove-vote-links">
            <vb:if condition="$votes['remove_vote_link']">
                <a href="{vb:raw votes['remove_vote_link']}&amp;targetid={vb:raw votes['target_id']}" rel="nofollow" name="RemoveVote::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" id="RemoveVote::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" >{vb:rawphrase vbv_post_vote_remove_user_vote}</a>
            </vb:if>
            <vb:if condition="$votes['remove_all_votes_link']">
                <a href="{vb:raw votes['remove_all_votes_link']}&amp;targetid={vb:raw votes['target_id']}" rel="nofollow" name="RemoveVote::All::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" id="RemoveVote::All::{vb:raw votes['vote_type']}::{vb:raw votes['target_id']}" >{vb:rawphrase vbv_post_vote_remove_all_votes}</a>
            </vb:if>
            </div>
        </vb:if>
        </div>
    </div>
</vb:if>]]></template>
		<template name="vote_postbit_info_wrapper" templatetype="template" date="1290413205" username="jpatuk" version="0.7"><![CDATA[<li class="postbitlegacy vote-info-container" id="Vote_message_{vb:raw target_id}" <vb:if condition="!$vote_results OR $show['vote_result_hide']">style="display: none;"</vb:if>>{vb:raw votes}</li>]]></template>
		<template name="vote_postbit_user" templatetype="template" date="1279637258" username="varnak" version="0.4"><![CDATA[<a href="member.php?{vb:raw session['sessionurl']}u={vb:raw voted_user['fromuserid']}" rel="nofollow">{vb:raw voted_user['username']}</a>]]></template>
		<template name="vote_post_init_js" templatetype="template" date="1283412656" username="jpatuk" version="0.5"><![CDATA[<script type="text/javascript">
    <!--
    //Init target type constant
    var VOTE_CONTENT_TYPE = "{vb:raw content_type}";

    // initialize vote buttons and votes result table
    AJAX_ItemVote_Init("{vb:raw message_container}","{vb:raw item_id_name}");

    if ("{vb:raw message_container}" == "posts")
    {
        // override PostBit_Init
        Pre_Votes_PostBit_Init = PostBit_Init;
        PostBit_Init = function (obj, post_id)
        {
            if (typeof AJAX_ItemVote_Init != "undefined")
            {
                // init vote controls
                AJAX_ItemVote_Init(obj, "{vb:raw item_id_name}", post_id);
            }

            Pre_Votes_PostBit_Init(obj, post_id);
        }
    }
    //-->
</script>]]></template>
		<template name="vote_profile_stat" templatetype="template" date="1279550032" username="varnak" version="0.4"><![CDATA[<h5 class="subsubsectionhead">{vb:rawphrase vbv_votes_statistic}</h5>
	<dl class="stats">
		<dt>{vb:rawphrase vbv_received_votes}</dt>
		<dd> <vb:if condition="$userinfo['received_positive_votes'] OR $userinfo['received_negative_votes']">
            
                <vb:if condition="$userinfo['received_positive_votes']">
                    + <a href="{vb:raw userinfo['received_votes_search_url']}&amp;value=1">{vb:raw userinfo['received_positive_votes']}</a>
                </vb:if>
                <vb:if condition="$userinfo['received_positive_votes'] AND $userinfo['received_negative_votes']"> / </vb:if>
                <vb:if condition="$userinfo['received_negative_votes']">
                    - <a href="{vb:raw userinfo['received_votes_search_url']}&amp;value=-1">{vb:raw userinfo['received_negative_votes']}</a>
                </vb:if>
            <vb:else />
                0
            </vb:if></dd>
	</dl>
	<dl class="stats">
		<dt>{vb:rawphrase vbv_given_votes}</dt>
		<dd> <vb:if condition="$userinfo['given_positive_votes'] OR $userinfo['given_negative_votes']">
                <vb:if condition="$userinfo['given_positive_votes']">
                    + <a href="{vb:raw userinfo['given_votes_search_url']}&amp;value=1">{vb:raw userinfo['given_positive_votes']}</a>
                </vb:if>
                <vb:if condition="$userinfo['given_positive_votes'] AND $userinfo['given_negative_votes']"> / </vb:if>
                <vb:if condition="$userinfo['given_negative_votes']">
                    - <a href="{vb:raw userinfo['given_votes_search_url']}&amp;value=-1">{vb:raw userinfo['given_negative_votes']}</a>
                </vb:if>
            <vb:else />
                0
            </vb:if></dd>
	</dl>]]></template>
		<template name="vote_searchbit_stat" templatetype="template" date="1279541517" username="varnak" version="0.4"><![CDATA[            <vb:if condition="$votes_count['positive_votes']">+ {vb:raw votes_count['positive_votes']}</vb:if>
            <vb:if condition="$votes_count['positive_votes'] AND $votes_count['negative_votes']">/</vb:if>
            <vb:if condition="$votes_count['negative_votes']">- {vb:raw votes_count['negative_votes']}</vb:if>
        ]]></template>
		<template name="vote_sg_init_js" templatetype="template" date="1283412620" username="jpatuk" version="0.5"><![CDATA[<script type="text/javascript">
<!--
    AJAX_ItemVote_Init("{vb:raw message_container}","{vb:raw item_id_name}","{vb:raw item_id}");
//-->
</script>]]></template>
	</templates>
	<stylevardfns>
	</stylevardfns>
	<stylevars>
	</stylevars>
	<plugins>
		<plugin active="1" executionorder="5">
			<title>Cache templates</title>
			<hookname>cache_templates</hookname>
			<phpcode><![CDATA[global $vbulletin;
$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
if (!is_member_of($vbulletin->userinfo, $disabled_group))
{
    $cache[] = 'vote_navbar_toplinks';
    if (THIS_SCRIPT == 'member')
    {
        $cache[] = 'vote_profile_stat';
    }
    if (THIS_SCRIPT == 'search')
    {
        $cache[] = 'vote_searchbit_stat';
        // workaround for VB not caching this template
        $cache[] = 'search_results_socialgroup_message';
    }
    if (THIS_SCRIPT == 'vb_votes')
    {
        $cache[] = 'vote_postbit_buttons';
        $cache[] = 'vote_postbit_user';
        $cache[] = 'vote_postbit_info';
    }
    if (THIS_SCRIPT == 'showthread')
    {
        $cache[] = 'vote_postbit_buttons';
        $cache[] = 'vote_postbit_user';
        $cache[] = 'vote_postbit_info_wrapper';
        $cache[] = 'vote_postbit_info';
        $cache[] = 'vote_buttons_css';
        $cache[] = 'vote_js';
        $cache[] = 'vote_post_init_js';
    }
    if (THIS_SCRIPT == 'group' && $vbulletin->options['vbv_enable_sg_votes'])
    {
        $cache[] = 'sg_vote_buttons';
        $cache[] = 'vote_postbit_user';
        $cache[] = 'sg_vote_info_wrapper';
        $cache[] = 'sg_vote_info';
        $cache[] = 'sg_vote_buttons_css';
        $cache[] = 'sg_vote_info_css';
        $cache[] = 'vote_js';
        $cache[] = 'vote_sg_init_js';
        $cache[] = 'vote_post_init_js';
    }
    if (THIS_SCRIPT == 'editpost' || THIS_SCRIPT == 'showpost')
    {
        $cache[] = 'vote_postbit_button';
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clean old negative votes</title>
			<hookname>cron_script_cleanup_daily</hookname>
			<phpcode><![CDATA[if( intval( $vbulletin->options['vbv_neg_votes_expire_days'] ) > 0 )
{
    require_once(DIR . '/includes/class_votes.php');
    $date_limit = TIMENOW - 24 * 60 * 60 * $vbulletin->options['vbv_neg_votes_expire_days'];

    // Delete old votes
    $sql = 'DELETE FROM
                `' . TABLE_PREFIX . 'votes`
            WHERE
                `date` < ' . $date_limit . ' AND
                `vote` = "' . vtVotes::NEGATIVE . '"';
    $vbulletin->db->query_write($sql);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on discussion deletion</title>
			<hookname>discussiondata_start</hookname>
			<phpcode><![CDATA[if ($_POST['do'] == 'doinlinedelete')
{
    global $vbulletin;
    global $discussion;
    $db = $vbulletin->db;
    $sql = 'SELECT `gmid`
            FROM `' . TABLE_PREFIX . 'groupmessage`
            WHERE `discussionid` = '.$discussion['discussionid'];
    $gmids = $db->query_read($sql);
    $gmid_list = array();
    while ($gmid = $db->fetch_array($gmids))
    {
        $gmid_list[] = $gmid['gmid'];
    }
    if (!empty($gmid_list))
    {
        require_once(DIR . '/includes/class_votes.php');
        vtVotes::remove_votes_by_target_id_list($gmid_list, 'vBForum_SocialGroupMessage');
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="20">
			<title>Add items to search menu</title>
			<hookname>global_bootstrap_complete</hookname>
			<phpcode><![CDATA[global $show, $vbulletin, $template_hook;
$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
if ($show['communitylink'] && !is_member_of($vbulletin->userinfo, $disabled_group))
{
    $show['positive'] = true;
    if ($vbulletin->options['vbv_enable_neg_votes'])
    {
        $show['negative'] = true;
    }
    $day_limit = $vbulletin->options['vbv_top_voted_days'];
    if (0 < $day_limit)
    {
        require_once(DIR . '/includes/class_votes.php');
        $url_params = array('do' => 'topvotes',
                            'package'=>'vBForum',
                            'value' => '1');
        $links['top_positive'] = vtVotes::create_vote_url($url_params, 'search.php');
        $url_params['value'] = 0;
        $links['top_negative'] = vtVotes::create_vote_url($url_params, 'search.php');
        $rcd_vbv_templater = vB_Template::create('vote_navbar_toplinks');
        $rcd_vbv_templater->register('links', $links);
        $rcd_vbv_templater->register('day_limit', $day_limit);
        $template_hook['navbar_community_menu_end'] .= $rcd_vbv_templater->render();
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Define vote content type</title>
			<hookname>global_bootstrap_init_complete</hookname>
			<phpcode><![CDATA[switch (THIS_SCRIPT)
{
    case 'showthread':
    case 'showpost':
    case 'editpost':
        define ('VOTE_CONTENT_TYPE', 'vBForum_Post');
        break;
    case 'group':
        define('VOTE_CONTENT_TYPE', 'vBForum_SocialGroupMessage');
        break;
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Remove votes on message deletion</title>
			<hookname>groupmessagedata_delete</hookname>
			<phpcode><![CDATA[if (!empty($this->existing['gmid']))
{
    require_once(DIR . '/includes/class_votes.php');

    vtVotes::remove_votes_by_target_id_list(array($this->existing['gmid']), 'vBForum_SocialGroupMessage');
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Fill votes array</title>
			<hookname>group_discuss_start</hookname>
			<phpcode><![CDATA[$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']); 
if (!is_member_of($vbulletin->userinfo, $disabled_group) && $vbulletin->options['vbv_enable_sg_votes']) 
{
    require_once(DIR . '/includes/class_votes.php');
    $discussionid = $vbulletin->GPC['discussionid'];
    $db_resource = $vbulletin->db->query_read("SELECT gmid FROM groupmessage WHERE discussionid=".$discussionid);
    while ($vote = $vbulletin->db->fetch_array($db_resource))
    {
        $target_id_list[] = $vote['gmid'];
    }
    $target_id_list[] = '0'; 
    $vote_manager = vtVotes::get_instance(VOTE_CONTENT_TYPE); 
    $discussion['votes'] = $vote_manager->get_items_list_votes($target_id_list);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add vote info and buttons to group message and search results</title>
			<hookname>group_messagebit_display_complete</hookname>
			<phpcode><![CDATA[global $vbulletin;
if ($vbulletin->options['vbv_enable_sg_votes'])
{
    global $discussion;
    if (0 < (int) $vbulletin->userinfo['userid'] && $this->template == 'socialgroups_message' && !$discussion['deleted'])
    {
        require_once(DIR . '/includes/class_votes.php');
        $vote_manager = vtVotes::get_instance(VOTE_CONTENT_TYPE, $this->item);

        // add votes result
        $show['vote_result_hide'] = FALSE;
        $votes = $discussion['votes'][$this->item['gmid']];
        if ($vbulletin->GPC['ajax'] && empty($votes))
        {
            $votes = $vote_manager->get_item_votes();
        }

        $template_hook['postbit_votes_end'] .= $vote_manager->render_votes_block($votes, $this->item['gmid']); 
        // add buttons
        $template_hook['postbit_buttons_end'] .= $vote_manager->render_vote_buttons();

        if ($vbulletin->GPC['ajax'])
        {
            $rcd_vbv_templater = vB_Template::create('vote_sg_init_js');
            $rcd_vbv_templater->register('content_type', VOTE_CONTENT_TYPE);
            $rcd_vbv_templater->register('message_container', 'message_list');
            $rcd_vbv_templater->register('item_id_name', 'gmessage_');
            $rcd_vbv_templater->register('item_id', $this->item['gmid']);
            $template_hook['postbit_votes_end'] .= $rcd_vbv_templater->render();
        }
    }
    if ('search_results_socialgroup_message' == $this->template)
    {
        global $search_result_ids;
        $search_result_ids['vBForum_SocialGroupMessage'][] = $this->item['gmid'];
        $ctypeid = vB_Types::instance()->getContentTypeId('vBForum_SocialGroupMessage');
        $this->item['votes'] = 'VOTES_RESULT_' . $ctypeid . '_' . $this->item['gmid'];
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes if post(s) moved in unvoteable forum</title>
			<hookname>inlinemod_domoveposts</hookname>
			<phpcode><![CDATA[$unvoted_forums = explode(',', $vbulletin->options['vbv_ignored_forums']);
if (in_array($destforuminfo['forumid'], $unvoted_forums))
{
    require_once(DIR . '/includes/class_votes.php');
    vtVotes::remove_votes_by_target_id_list($postids, 'vBForum_Post');
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes if thread(s) moved to unvoteable forum (inline)</title>
			<hookname>inlinemod_domovethread</hookname>
			<phpcode><![CDATA[$unvoted_forums = explode(',', $vbulletin->options['vbv_ignored_forums']);
if (in_array($destforuminfo['forumid'], $unvoted_forums))
{
    $sql = 'SELECT `postid`
            FROM ' . TABLE_PREFIX . 'post AS post
            WHERE `threadid` IN (' . implode($threadids). ')';
	$posts = $db->query_read($sql);
    $post_id_list = array();
	while ($post = $db->fetch_array($posts))
	{
		$post_id_list[] = $post['postid'];
	}
    if (!empty($post_id_list))
    {
        require_once(DIR . '/includes/class_votes.php');
        vtVotes::remove_votes_by_target_id_list($post_id_list, 'vBForum_Post');
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Display votes statistics in member profile</title>
			<hookname>member_profileblock_fetch_unwrapped</hookname>
			<phpcode><![CDATA[global $show, $vbulletin, $template_hook;
$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
if ('vB_ProfileBlock_Statistics' == get_class($this) && !is_member_of($vbulletin->userinfo, $disabled_group))
{
    require_once(DIR . '/includes/class_votes.php');
    global $vbulletin;
    $db = $vbulletin->db;

    $url_params = array('do' => 'uservotes',
                        'package' => 'vBForum',
                    );

    // received votes
    $sql = 'SELECT
                `vote` , count( vote ) AS count
            FROM
                ' . TABLE_PREFIX . 'votes
            WHERE
                `touserid` = ' . $userinfo['userid'] . '
            GROUP BY
                `vote`';
    $db_resource = $db->query_read($sql);
    if ($db_resource)
    {
        $url_params['touserid'] = $userinfo['userid'];
        $userinfo['received_votes_search_url'] = vtVotes::create_vote_url($url_params, 'search.php');
        unset($url_params['touserid']);
    }
    while ($votes_amount = $db->fetch_array($db_resource))
    {
        if (vtVotes::POSITIVE == $votes_amount['vote'])
        {
            $amount_type = 'received_positive_votes';
        }
        else
        {
            $amount_type = 'received_negative_votes';
        }
        $userinfo[$amount_type] = $votes_amount['count'];
    }

    // given
    $sql = 'SELECT
                `vote` , count( vote ) AS count
            FROM
                ' . TABLE_PREFIX . 'votes
            WHERE
                `fromuserid` = ' . $userinfo['userid'] . '
            GROUP BY
                `vote`';
    $db_resource = $db->query_read($sql);
    if ($db_resource)
    {
        $url_params['fromuserid'] = $userinfo['userid'];

        $userinfo['given_votes_search_url'] = vtVotes::create_vote_url($url_params, 'search.php');
    }
    while ($votes_amount = $db->fetch_array($db_resource))
    {
        if (vtVotes::POSITIVE == $votes_amount['vote'])
        {
            $amount_type = 'given_positive_votes';
        }
        else
        {
            $amount_type = 'given_negative_votes';
        }
        $userinfo[$amount_type] = $votes_amount['count'];
    }
    $rcd_vbv_templater = vB_Template::create('vote_profile_stat');
    $rcd_vbv_templater->register('userinfo', $userinfo);
    $template_hook['profile_stats_pregeneral'] .= $rcd_vbv_templater->render();
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Modify templates</title>
			<hookname>parse_templates</hookname>
			<phpcode><![CDATA[global $vbulletin;
$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
if (!is_member_of($vbulletin->userinfo, $disabled_group))
{
    // Add vote buttons to postbit
    if (array_key_exists('postbit', $vbulletin->templatecache))
    {
        $search = 'if ($show[\'multiquote_post\']) {
					$final_rendered .= \'
					<a class=\\\'multiquote\\\' href="\' . $post[\'replylink\'] . \'" rel="nofollow" onclick="return false;" id="mq_\' . $post[\'postid\'] . \'"><img id="mq_image_\' . $post[\'postid\'] . \'" src="\' . $vboptions[\'cleargifurl\'] . \'" alt="\' . vB_Template_Runtime::parsePhrase("multi_quote_this_message") . \'" />&nbsp;</a>
				\';
				} else {
			$final_rendered .= \'\';
		}';

        $replace = $search . '$final_rendered .= $template_hook[\'postbit_buttons_end\'];';
        $before_patch = $vbulletin->templatecache['postbit']; 
        $vbulletin->templatecache['postbit'] = str_replace($search, $replace, $vbulletin->templatecache['postbit']);
        if ($before_patch == $vbulletin->templatecache['postbit'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s'",
                                'vB Votes',
                                'parse_templates',
                                'postbit');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }

    // Add vote buttons to postbit legacy
    if (array_key_exists('postbit_legacy', $vbulletin->templatecache))
    {
        $search = 'if ($show[\'multiquote_post\']) {
					$final_rendered .= \'
						
						 <a class="multiquote" href="\' . $post[\'replylink\'] . \'" rel="nofollow" onclick="return false;" id="mq_\' . $post[\'postid\'] . \'"><img id="mq_image_\' . $post[\'postid\'] . \'" src="\' . $vboptions[\'cleargifurl\'] . \'" alt="\' . vB_Template_Runtime::parsePhrase("multi_quote_this_message") . \'" />&nbsp;</a> 
					\';
				} else {
			$final_rendered .= \'\';
		}';

        $replace = $search . '$final_rendered .= $template_hook[\'postbit_buttons_end\'];';
        $before_patch = $vbulletin->templatecache['postbit_legacy']; 
        $vbulletin->templatecache['postbit_legacy'] = str_replace($search, $replace, $vbulletin->templatecache['postbit_legacy']);
        if ($before_patch == $vbulletin->templatecache['postbit_legacy'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s'",
                                'vB Votes',
                                'parse_templates',
                                'postbit_legacy');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }

    // Add votes result to posts from ignored users
    if (THIS_SCRIPT == 'showthread')
    {
        if (array_key_exists('postbit_ignore_global', $vbulletin->templatecache))
        {
            $vbulletin->templatecache['postbit_ignore_global'] .= '$final_rendered .= $template_hook[\'postbit_end\'];';
        }
        if (array_key_exists('postbit_ignore', $vbulletin->templatecache))
        {
            $vbulletin->templatecache['postbit_ignore'] .= '$final_rendered .= $template_hook[\'postbit_end\'];';
        }
    }

    if (array_key_exists('socialgroups_message', $vbulletin->templatecache) && $vbulletin->options['vbv_enable_sg_votes']) 
    {
        $search = 'if ($message[\'itemipaddress\']) {
					$final_rendered .= \'
				<a href="\' . vB_Template_Runtime::linkBuild("groupmessage", $message, \'do=viewip\') . \'">\' . vB_Template_Runtime::parsePhrase("ip") . \'</a>
			\';
				} else {
			$final_rendered .= \'\';
		}';
        $replace = $search .'$final_rendered .= $template_hook[\'postbit_buttons_end\'];';
        $before_patch = $vbulletin->templatecache['socialgroups_message'];
        $vbulletin->templatecache['socialgroups_message'] = str_replace($search, $replace, $vbulletin->templatecache['socialgroups_message']);
        if ($before_patch == $vbulletin->templatecache['socialgroups_message'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s' first modification",
                                'vB Votes',
                                'parse_templates',
                                'socialgroups_message');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }

        $search = '<script type="text/javascript">';
        $replace = '\';$final_rendered .= $template_hook[\'postbit_votes_end\'];$final_rendered .= \'' . $search;
        $before_patch = $vbulletin->templatecache['socialgroups_message'];
        $vbulletin->templatecache['socialgroups_message'] = str_replace($search, $replace, $vbulletin->templatecache['socialgroups_message']);
        if ($before_patch == $vbulletin->templatecache['socialgroups_message'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s' second modification",
                                'vB Votes',
                                'parse_templates',
                                'socialgroups_message');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }

    if (array_key_exists('search_results_postbit', $vbulletin->templatecache))
    {
        $search = '\'">\' . $post[\'threadtitle\'] . \'</a>';
        $replace = $search . '\' . $post[\'votes\'] . \'';
        $before_patch = $vbulletin->templatecache['search_results_postbit'];
        $vbulletin->templatecache['search_results_postbit'] = str_replace($search, $replace, $vbulletin->templatecache['search_results_postbit']);
        if ($before_patch == $vbulletin->templatecache['search_results_postbit'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s'",
                                'vB Votes',
                                'parse_templates',
                                'search_results_postbit');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }

    if (array_key_exists('search_results_socialgroup_message', $vbulletin->templatecache))
    {
        $search = '>\' . $message[\'discussiontitle\'] . \'</a>';
        $replace = $search . '\' . $message[\'votes\'] . \'';
        $before_patch = $vbulletin->templatecache['search_results_socialgroup_message'];
        $vbulletin->templatecache['search_results_socialgroup_message'] = str_replace($search, $replace, $vbulletin->templatecache['search_results_socialgroup_message']);
        if ($before_patch == $vbulletin->templatecache['search_results_socialgroup_message'])
        {
            $err_message = sprintf("Product '%s', error in hook %s : can't modify template '%s'",
                                'vB Votes',
                                'parse_templates',
                                'search_results_socialgroup_message');
            error_log($err_message); // Send to PHP error log
            if ($vbulletin->debug)
            {
                trigger_error($err_message, E_USER_WARNING); // Display on page
                require_once(DIR . '/includes/functions_log_error.php');
                log_vbulletin_error($err_message, 'php'); // Send to vB error log
            }
            unset($err_message, $before_patch);
        }
    }

    if ('showthread' == THIS_SCRIPT OR ('group' == THIS_SCRIPT AND ($_REQUEST['do'] == 'discuss' OR $_REQUEST['do'] == 'message')) )
    {
        // add vote.js file
        $rcd_vbv_templater = vB_Template::create('vote_js');
        $rcd_vbv_templater->register('version', VBVOTES_JS_VERSION);
        $template_hook['headinclude_javascript'] .= $rcd_vbv_templater->render();

        $message_container = 'posts';
        if ('group' == THIS_SCRIPT)
        {
            $message_container = 'message_list';
        }

        $item_id_name = 'post_';
        if ('group' == THIS_SCRIPT && $vbulletin->options['vbv_enable_sg_votes'])
        {
            $item_id_name = 'gmessage_';
        }
        // init votes handlers
        $rcd_vbv_templater = vB_Template::create('vote_post_init_js');
        $rcd_vbv_templater->register('content_type', VOTE_CONTENT_TYPE);
        $rcd_vbv_templater->register('message_container', $message_container);
        $rcd_vbv_templater->register('item_id_name', $item_id_name);
        $template_hook['footer_javascript'] .= $rcd_vbv_templater->render();

        if ('group' == THIS_SCRIPT && $vbulletin->options['vbv_enable_sg_votes'])
        {
            $rcd_vbv_templater = vB_Template::create('sg_vote_buttons_css');
            $template_hook['headinclude_bottom_css'] .= $rcd_vbv_templater->render();
            $rcd_vbv_templater = vB_Template::create('sg_vote_info_css');
            $template_hook['headinclude_bottom_css'] .= $rcd_vbv_templater->render();
        }
        else if ('showthread' == THIS_SCRIPT)
        {
            $rcd_vbv_templater = vB_Template::create('vote_buttons_css');
            $template_hook['headinclude_bottom_css'] .= $rcd_vbv_templater->render();
        }
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Display votes result and vote buttons</title>
			<hookname>postbit_display_complete</hookname>
			<phpcode><![CDATA[if (in_array(THIS_SCRIPT, array('showthread', 'showpost', 'editpost')) && !$thread['isdeleted'])
{
    if (0 < (int) $this->registry->userinfo['userid'])
    {
        require_once(DIR . '/includes/class_votes.php');
        $vote_manager = vtVotes::get_instance(VOTE_CONTENT_TYPE, $post);

        // add votes result
        if (!$this->registry->GPC['ajax'])
        {
            $show['vote_result_hide'] = TRUE;
            if ('postbit' == $this->templatename OR 'postbit_legacy' == $this->templatename)
            {
                $show['vote_result_hide'] = FALSE;
            }
            $votes = $post['votes'];
            $template_hook['postbit_end'] .= $vote_manager->render_votes_block($votes, $post['postid']);
        }

        // add buttons
        $template_hook['postbit_buttons_end'] .= $vote_manager->render_vote_buttons();
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on post delete</title>
			<hookname>postdata_delete</hookname>
			<phpcode><![CDATA[require_once(DIR . '/includes/class_votes.php');
vtVotes::remove_votes_by_target_id_list(array($postid), 'vBForum_Post');]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add votes to search result. Part 2</title>
			<hookname>search_complete</hookname>
			<phpcode><![CDATA[global $search_result_ids;
if (!empty($search_result_ids) AND is_array($search_result_ids))
{
    require_once(DIR . '/includes/class_votes.php');
    $searchbits = $this->template->unregister('searchbits');
    $vote_type = NULL;
    if (!$vbulletin->options['vbv_enable_neg_votes'])
    {
        $vote_type = vtVotes::POSITIVE;
    }

    $item_votes = array();
    $disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
    if (!is_member_of($vbulletin->userinfo, $disabled_group))
    {
        foreach ($search_result_ids as $contenttype => $votes_array)
        {
            $vote_manager = vtVotes::get_instance($contenttype);
            $item_votes[$contenttype] = $vote_manager->get_items_list_votes($votes_array, $vote_type);
        }
    }

    $votes_result_search = $votes_result_replace = array();
    foreach ($search_result_ids as $contenttype => $votes_array)
    {
        $ctype = vB_Types::instance()->getContentTypeId($contenttype);
        foreach ($votes_array as $item_id)
        {
            $votes_result_search[$ctype . '_' .$item_id] = 'VOTES_RESULT_' . $ctype . '_' . $item_id;
            $votes_result_replace[$ctype . '_' .$item_id] = '';
            if (array_key_exists($item_id, $item_votes[$contenttype]))
            {
                $votes = $item_votes[$contenttype][$item_id];
                $votes_count = array();
                if ($votes[vtVotes::POSITIVE])
                {
                    $votes_count['positive_votes'] = count($votes[vtVotes::POSITIVE]);
                }
                if ($votes[vtVotes::NEGATIVE])
                {
                    $votes_count['negative_votes'] = count($votes[vtVotes::NEGATIVE]);
                }
                $rcd_vbv_templater = vB_Template::create('vote_searchbit_stat');
                $rcd_vbv_templater->register('votes_count', $votes_count);
                $votes_result_replace[$ctype . '_' .$item_id] = $rcd_vbv_templater->render();
            }
        }
    }
    $searchbits = str_replace($votes_result_search, $votes_result_replace, $searchbits);
    $this->template->register('searchbits', $searchbits);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add votes to search result. Part 1</title>
			<hookname>search_results_postbit</hookname>
			<phpcode><![CDATA[if ('search_results_postbit' == $template_name)
{
    global $search_result_ids;
    $search_result_ids['vBForum_Post'][] = $post['postid'];
    $ctypeid = vB_Types::instance()->getContentTypeId('vBForum_Post');
    $post['votes'] = 'VOTES_RESULT_' . $ctypeid . '_' . $post['postid'];
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Search Top and User votes</title>
			<hookname>search_start</hookname>
			<phpcode><![CDATA[// #############################################################################
if ('topvotes' == $_REQUEST['do'] OR 'uservotes' == $_REQUEST['do'])
{
    require_once(DIR . '/includes/class_votes.php');
    $vbulletin->input->clean_array_gpc('r', array(
        'package' => TYPE_STR,
        'value' => TYPE_BOOL,
    ));

    if ($vbulletin->GPC_exists['package'])
    {
        $package = $vbulletin->GPC['package'];
    }
    else
    {
        $package = 'vBForum';
    }

    // init with supported content types
    $type=array(vB_Types::instance()->getContentTypeId('vBForum_Post'),
                vB_Types::instance()->getContentTypeId('vBForum_SocialGroupMessage'));
    $vote_value = ($vbulletin->GPC['value'] ? vtVotes::POSITIVE : vtVotes::NEGATIVE);
    if (vtVotes::POSITIVE == $vote_value)
    {
        $votes_type = 'positive';
    }
    else
    {
        $votes_type = 'negative';
    }
}
if ('topvotes' == $_REQUEST['do'])
{
    $criteria = $search_core->create_criteria(vB_Search_Core::SEARCH_COMMON);

    $criteria->add_filter('value', vB_Search_Core::OP_EQ, $vote_value, true);
    $criteria->add_contenttype_filter($type);
    $criteria->set_grouped(vB_Search_Core::GROUP_NO);

    $day_limit = $vbulletin->options['vbv_top_voted_days'];
    $title_phrase = construct_phrase($vbphrase['vbv_' . $votes_type .'_votes_search'], $day_limit);

    $criteria->add_display_strings('TopVotes', $title_phrase);

    $errors = $criteria->get_errors();
    if ($errors)
    {
        standard_error(fetch_error($errors[0]));
    }

    try
    {
        $class_name = 'TopVotes';
        include_once(DIR . '/packages/votes/search/searchcontroller/' . strtolower($class_name) . '.php');
        $search_controller = $search_core->get_search_controller($package, $class_name);
    }
    catch (Exception $e)
    {
        eval(standard_error(fetch_error('searchnoresults', ''), '', false));
    }

    $results = vB_Search_Results::create_from_criteria($current_user, $criteria, $search_controller);

    //get a page with one result to check if we actually have any.
    $first_result = $results->get_page(1, 1, 1);

    if (!$first_result)
    {
        eval(standard_error(fetch_error('searchnoresults', ''), '', false));
    }

    $vbulletin->url = 'search.php?' . $vbulletin->session->vars['sessionurl'] .
        "&searchid=" . $results->get_searchid();
    eval(print_standard_redirect('search'));
    exit;
}

if ('uservotes' == $_REQUEST['do'])
{
    $vbulletin->input->clean_array_gpc('r', array(
        'fromuserid' => TYPE_UINT,
        'touserid' => TYPE_UINT,
    ));
    if ($vbulletin->GPC['fromuserid'])
    {
        // search by vote user
        $type = 'fromuserid';
        $search_user_id = $vbulletin->GPC['fromuserid'];
        $title = 'fromuser';
    }
    else
    {
        // search by voted post author
        $type = 'touserid';
        $search_user_id = $vbulletin->GPC['touserid'];
        $title = 'touser';
    }

    // get user info
    if ($user = $db->query_first("SELECT userid, username FROM " . TABLE_PREFIX . "user WHERE userid = " . $search_user_id))
    {
        $search_user = & $user['username'];
    }
    else
    {
        // could not find specified user
        eval(standard_error(fetch_error('invalidid', $vbphrase['user'], $vbulletin->options['contactuslink'])));
    }
    $criteria = $search_core->create_criteria($title);
    $criteria->add_filter('value', vB_Search_Core::OP_EQ, $vote_value, true);
    $criteria->add_filter('type', vB_Search_Core::OP_EQ, $type, true);
    $criteria->add_filter('userid', vB_Search_Core::OP_EQ, $search_user_id, true);
    $criteria->add_contenttype_filter($type);
    $criteria->set_grouped(vB_Search_Core::GROUP_NO);

    switch ($title)
    {
        case 'fromuser':
            $vote_phrase_name = 'vbv_user_given_' . $votes_type .'_votes';
            $title_phrase = construct_phrase($vbphrase[$vote_phrase_name], $search_user);
            break;
        case 'touser':
            $vote_phrase_name = 'vbv_user_received_' . $votes_type .'_votes';
            $title_phrase = construct_phrase($vbphrase[$vote_phrase_name], $search_user);
            break;
    }

    $criteria->add_display_strings('UserName', $title_phrase);

    $errors = $criteria->get_errors();
    if ($errors)
    {
        standard_error(fetch_error($errors[0]));
    }

    try
    {
        $class_name = 'UserVotes';

        include_once(DIR . '/packages/votes/search/searchcontroller/' . strtolower($class_name) . '.php');
        $search_controller = $search_core->get_search_controller($package, $class_name);
    }
    catch (Exception $e)
    {
        eval(standard_error(fetch_error('searchnoresults', ''), '', false));
    }

    $results = vB_Search_Results::create_from_criteria($current_user, $criteria, $search_controller);

    //get a page with one result to check if we actually have any.
    $first_result = $results->get_page(1, 1, 1);

    if (!$first_result)
    {
        eval(standard_error(fetch_error('searchnoresults', ''), '', false));
    }

    $vbulletin->url = 'search.php?' . $vbulletin->session->vars['sessionurl'] .
        "&searchid=" . $results->get_searchid();
    eval(print_standard_redirect('search'));
    exit;
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add votes to showthread. Part 2.</title>
			<hookname>showthread_postbit_create</hookname>
			<phpcode><![CDATA[if (isset($post_votes[$post['postid']]))
{ 
    $post['votes'] = $post_votes[$post['postid']];
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Add votes to showthread. Part 1.</title>
			<hookname>showthread_query</hookname>
			<phpcode><![CDATA[$post_votes = array();
$disabled_group = unserialize($vbulletin->options['vbv_grp_disable']);
if (!is_member_of($vbulletin->userinfo, $disabled_group))
{
    require_once(DIR . '/includes/class_votes.php');
    $target_id_list = $ids;
    $target_id_list[] = '0';
    $vote_manager = vtVotes::get_instance(VOTE_CONTENT_TYPE);
    $post_votes = $vote_manager->get_items_list_votes($target_id_list);
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on group delete</title>
			<hookname>socgroupdata_start</hookname>
			<phpcode><![CDATA[if ($_POST['do'] == 'dodelete')
{
    global $vbulletin;
    global $group;
    $db = $vbulletin->db;
    $sql = 'SELECT `gmid`
            FROM `' . TABLE_PREFIX . 'groupmessage`
            WHERE `discussionid` IN (SELECT `discussionid` FROM `' . TABLE_PREFIX . 'discussion` WHERE `groupid`='.$group['groupid'].')';
    $gmids = $db->query_read($sql);
    $gmid_list = array();
    while ($gmid = $db->fetch_array($gmids))
    {
        $gmid_list[] = $gmid['gmid'];
    }
    if (!empty($gmid_list))
    {
        require_once(DIR . '/includes/class_votes.php');
        vtVotes::remove_votes_by_target_id_list($gmid_list, 'vBForum_SocialGroupMessage');
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on thread delete</title>
			<hookname>threaddata_delete</hookname>
			<phpcode><![CDATA[$sql = 'SELECT `postid`
            FROM ' . TABLE_PREFIX . 'post AS post
            WHERE `threadid` = ' . $threadid;
$posts = $this->dbobject->query_read($sql);
$post_id_list = array();
while ($post = $this->dbobject->fetch_array($posts))
{
    $post_id_list[] = $post['postid'];
}
if (!empty($post_id_list))
{
    require_once(DIR . '/includes/class_votes.php');
    vtVotes::remove_votes_by_target_id_list($post_id_list, 'vBForum_Post');
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes if thread moved to unvoteable forum</title>
			<hookname>threadmanage_move_complete</hookname>
			<phpcode><![CDATA[$unvoted_forums = explode(',', $vbulletin->options['vbv_ignored_forums']);
if (in_array($destforuminfo['forumid'], $unvoted_forums))
{
    $sql = 'SELECT `postid`
            FROM ' . TABLE_PREFIX . 'post AS post
            WHERE `threadid` = ' . $threadid;
    $posts = $db->query_read($sql);
    $post_id_list = array();
    while ($post = $db->fetch_array($posts))
    {
        $post_id_list[] = $post['postid'];
    }
    if (!empty($post_id_list))
    {
        require_once(DIR . '/includes/class_votes.php');
        vtVotes::remove_votes_by_target_id_list($post_id_list, 'vBForum_Post');
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Merge votes on user accounts merge</title>
			<hookname>useradmin_merge</hookname>
			<phpcode><![CDATA[// note: votes for old account will be remove into "Clear votes(user delete)" hook (userdata_delete)
$sql = 'INSERT IGNORE INTO
                ' . TABLE_PREFIX . 'votes
            SELECT
                `targetid` ,
                `contenttypeid` ,
                `vote` ,
                ' . $destinfo['userid'] . ' ,
                `touserid` ,
                `date`
            FROM
                ' . TABLE_PREFIX . 'votes
            WHERE
                `fromuserid` = '. $sourceinfo['userid'];
$db->query_write($sql);

$sql = 'UPDATE
            ' . TABLE_PREFIX . 'votes
        SET
            `touserid` = ' . $destinfo['userid'] . '
        WHERE `touserid` = '. $sourceinfo['userid'];
$db->query_write($sql);

$sql = 'DELETE FROM
            ' . TABLE_PREFIX . 'votes
        WHERE
            `fromuserid` = `touserid`';
$db->query_write($sql);]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on user delete</title>
			<hookname>userdata_delete</hookname>
			<phpcode><![CDATA[require_once(DIR . '/includes/class_votes.php');
vtVotes::remove_votes_by_user_id($this->existing['userid']);]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Clear votes on user move to banned group</title>
			<hookname>userdata_postsave</hookname>
			<phpcode><![CDATA[if ($this->usergroups_changed())
{
    if (isset ($this->user['membergroupids']))
    {
        $user_group_list = explode(',', $this->user['membergroupids']);
    }
    if (isset ($this->user['usergroupid']))
    {
        $user_group_list[] = $this->user['usergroupid'];
    }
    $bann_groups = unserialize($this->registry->options['vbv_grp_banned']);
    if (!empty($user_group_list) AND !empty($bann_groups))
    {
        $need_cleaning = false;
        
        foreach($user_group_list as $group)
        {
            if (in_array($group, $bann_groups))
            {
                $need_cleaning = true;
                break;
            }
        }
        if ($need_cleaning)
        {
            require_once(DIR . '/includes/class_votes.php');
            vtVotes::remove_votes_by_user_id($userid);
        }
    }
}]]></phpcode>
		</plugin>
	</plugins>
	<phrases>
		<phrasetype name="Error Messages" fieldname="error">
			<phrase name="vbv_post_can_not_be_voted" date="1267730139" username="Vitaly" version=""><![CDATA[This post can't be voted]]></phrase>
			<phrase name="vbv_post_old" date="1267730189" username="Vitaly" version=""><![CDATA[This post is too old to be voted]]></phrase>
			<phrase name="vbv_post_voted" date="1267730229" username="Vitaly" version=""><![CDATA[You've already voted this post]]></phrase>
			<phrase name="vbv_to_many_votes_per_day" date="1267730287" username="Vitaly" version=""><![CDATA[Your daily voting limit exceeded]]></phrase>
			<phrase name="vbv_unsupported_type" date="1279808441" username="varnak" version=""><![CDATA[This content unsupported by Vb Votes system.
If you see this message, please contact the <a href="{1}">administrator</a>.]]></phrase>
			<phrase name="vbv_your_post" date="1267730343" username="Vitaly" version=""><![CDATA[You can't vote yourself]]></phrase>
		</phrasetype>
		<phrasetype name="GLOBAL" fieldname="global">
			<phrase name="vbv_given_votes" date="1267728837" username="Vitaly" version=""><![CDATA[Given at forum]]></phrase>
			<phrase name="vbv_navbar_section" date="1267728997" username="Vitaly" version=""><![CDATA[Top votes]]></phrase>
			<phrase name="vbv_neg_auto_report_msg" date="1282541496" username="jpatuk" version=""><![CDATA[(auto) This post got too many negative votes.
]]></phrase>
			<phrase name="vbv_negative_user_votes" date="1282541524" username="jpatuk" version=""><![CDATA[Thrown tomato:]]></phrase>
			<phrase name="vbv_negative_vote" date="1282541538" username="jpatuk" version=""><![CDATA[Throw tomato]]></phrase>
			<phrase name="vbv_negative_votes_search" date="1267728969" username="Vitaly" version=""><![CDATA[Top negative votes for {1} days]]></phrase>
			<phrase name="vbv_positive_user_votes" date="1282541558" username="jpatuk" version=""><![CDATA[Thanked:]]></phrase>
			<phrase name="vbv_positive_vote" date="1282541571" username="jpatuk" version=""><![CDATA[Thank author]]></phrase>
			<phrase name="vbv_positive_vote_link" date="1282541585" username="jpatuk" version=""><![CDATA[Thanks!]]></phrase>
			<phrase name="vbv_positive_votes_search" date="1265905352" username="e.shkuropat" version="0.1"><![CDATA[Top positive votes for {1} days]]></phrase>
			<phrase name="vbv_post_vote_remove_all_votes" date="1282541596" username="jpatuk" version=""><![CDATA[Remove all votes]]></phrase>
			<phrase name="vbv_post_vote_remove_user_vote" date="1282541608" username="jpatuk" version=""><![CDATA[Remove your vote]]></phrase>
			<phrase name="vbv_received_votes" date="1267728923" username="Vitaly" version=""><![CDATA[Received at forum]]></phrase>
			<phrase name="vbv_user_given_negative_votes" date="1268461940" username="Vitaly" version=""><![CDATA[{1} - gave negative votes]]></phrase>
			<phrase name="vbv_user_given_positive_votes" date="1268461965" username="Vitaly" version=""><![CDATA[{1} - gave positive votes]]></phrase>
			<phrase name="vbv_user_received_negative_votes" date="1268461987" username="Vitaly" version=""><![CDATA[{1} - received negative votes]]></phrase>
			<phrase name="vbv_user_received_positive_votes" date="1268462010" username="Vitaly" version=""><![CDATA[{1} - received positive votes]]></phrase>
			<phrase name="vbv_votes_statistic" date="1267728754" username="Vitaly" version=""><![CDATA[Votes]]></phrase>
		</phrasetype>
		<phrasetype name="vBulletin Settings" fieldname="vbsettings">
			<phrase name="setting_vbv_delete_own_votes_desc" date="1262984341" username="Vitaly" version="0.1"><![CDATA[Allow user to delete his own votes.]]></phrase>
			<phrase name="setting_vbv_delete_own_votes_title" date="1262984341" username="Vitaly" version="0.1"><![CDATA[Can delete own votes]]></phrase>
			<phrase name="setting_vbv_enable_neg_votes_desc" date="1262985014" username="Vitaly" version="0.1"><![CDATA[If disabled, only positive voting is allowed.]]></phrase>
			<phrase name="setting_vbv_enable_neg_votes_title" date="1262985014" username="Vitaly" version="0.1"><![CDATA[Enable Negative Votes]]></phrase>
			<phrase name="setting_vbv_enable_sg_votes_desc" date="1282974317" username="jpatuk" version="0.5"><![CDATA[Enable/disable voting in group discussions]]></phrase>
			<phrase name="setting_vbv_enable_sg_votes_title" date="1282974317" username="jpatuk" version="0.5"><![CDATA[Group discussions votes]]></phrase>
			<phrase name="setting_vbv_grp_banned_desc" date="1262987050" username="Vitaly" version="0.1"><![CDATA[When user goes to this group, all his votes are cleared.]]></phrase>
			<phrase name="setting_vbv_grp_banned_title" date="1262987050" username="Vitaly" version="0.1"><![CDATA[Banned user groups]]></phrase>
			<phrase name="setting_vbv_grp_disable_desc" date="1262983113" username="Vitaly" version="0.1"><![CDATA[User groups to completely disable mod. Recommended for guests, to keep good SEO rank.]]></phrase>
			<phrase name="setting_vbv_grp_disable_title" date="1262983113" username="Vitaly" version="0.1"><![CDATA[Disabled Groups]]></phrase>
			<phrase name="setting_vbv_grp_read_only_desc" date="1262987099" username="Vitaly" version="0.1"><![CDATA[This groups can view votes, but can't make new ones.]]></phrase>
			<phrase name="setting_vbv_grp_read_only_title" date="1262987099" username="Vitaly" version="0.1"><![CDATA[Read Only Groups]]></phrase>
			<phrase name="setting_vbv_grp_unvoteable_desc" date="1262987067" username="Vitaly" version="0.1"><![CDATA[Users from this groups can't get votes.]]></phrase>
			<phrase name="setting_vbv_grp_unvoteable_title" date="1262987067" username="Vitaly" version="0.1"><![CDATA[Unvoteable groups]]></phrase>
			<phrase name="setting_vbv_ignore_forum_childs_desc" date="1280225104" username="Vitaly" version="0.4"><![CDATA[If set YES, then ignored forum IDs will be autocompleted with their childs. It will be enougth to set only forum categories above.]]></phrase>
			<phrase name="setting_vbv_ignore_forum_childs_title" date="1280225104" username="Vitaly" version="0.4"><![CDATA[Ignore forums with childs]]></phrase>
			<phrase name="setting_vbv_ignored_forums_desc" date="1262985915" username="Vitaly" version="0.1"><![CDATA[Votes will be disabled for this forums. Place forum IDs, separated by ",". For example "1,2,3"]]></phrase>
			<phrase name="setting_vbv_ignored_forums_title" date="1262985915" username="Vitaly" version="0.1"><![CDATA[Ignored forums]]></phrase>
			<phrase name="setting_vbv_max_votes_daily_desc" date="1280212173" username="Vitaly" version="0.4"><![CDATA[How many votes user can give per day.]]></phrase>
			<phrase name="setting_vbv_max_votes_daily_title" date="1280212173" username="Vitaly" version="0.4"><![CDATA[Max votes per day]]></phrase>
			<phrase name="setting_vbv_neg_auto_report_desc" date="1280212664" username="Vitaly" version="0.4"><![CDATA[When post get too many negative votes, report to moderators is generated automatically. Set 0 to disable.]]></phrase>
			<phrase name="setting_vbv_neg_auto_report_title" date="1280212664" username="Vitaly" version="0.4"><![CDATA[Report after X negative votes]]></phrase>
			<phrase name="setting_vbv_neg_votes_expire_days_desc" date="1262985223" username="Vitaly" version="0.1"><![CDATA[After X days all negative votes are completely cleared. Set 0 to keep forever.]]></phrase>
			<phrase name="setting_vbv_neg_votes_expire_days_title" date="1262985223" username="Vitaly" version="0.1"><![CDATA[Negative votes expiration time (days)]]></phrase>
			<phrase name="setting_vbv_post_days_old_desc" date="1280212785" username="Vitaly" version="0.4"><![CDATA[This option allows to disable voting for posts, which are older XX days. So, only new posts can be voted. Set '0' to disable limits.]]></phrase>
			<phrase name="setting_vbv_post_days_old_title" date="1280212785" username="Vitaly" version="0.4"><![CDATA[Disable voting if post is X days old]]></phrase>
			<phrase name="setting_vbv_top_min_negative_count_desc" date="1284781324" username="jpatuk" version="0.5"><![CDATA["Top Voted" minimum negative votes count. Set 0 for unlimited search.]]></phrase>
			<phrase name="setting_vbv_top_min_negative_count_title" date="1284781324" username="jpatuk" version="0.5"><![CDATA["Top Voted" minimum negativce count]]></phrase>
			<phrase name="setting_vbv_top_min_positive_count_desc" date="1284781369" username="jpatuk" version="0.5"><![CDATA["Top Voted" minimum positive votes count. Set 0 for unlimited search.]]></phrase>
			<phrase name="setting_vbv_top_min_positive_count_title" date="1284781369" username="jpatuk" version="0.5"><![CDATA["Top Voted" minimum positive count]]></phrase>
			<phrase name="setting_vbv_top_voted_days_desc" date="1280212702" username="Vitaly" version="0.4"><![CDATA[Limit (in days) for "top voted" search. Set 0 disable top links at all.]]></phrase>
			<phrase name="setting_vbv_top_voted_days_title" date="1280212702" username="Vitaly" version="0.4"><![CDATA["Top Voted" days limit]]></phrase>
			<phrase name="settinggroup_vb_votes" date="1262979865" username="Vitaly" version="0.1"><![CDATA[vb Votes]]></phrase>
		</phrasetype>
	</phrases>
	<options>
		<settinggroup name="vb_votes" displayorder="65535">
			<setting varname="vbv_max_votes_daily" displayorder="10">
				<datatype>number</datatype>
				<defaultvalue>10</defaultvalue>
			</setting>
			<setting varname="vbv_top_min_negative_count" displayorder="10">
				<datatype>number</datatype>
				<defaultvalue>3</defaultvalue>
			</setting>
			<setting varname="vbv_top_min_positive_count" displayorder="10">
				<datatype>number</datatype>
				<defaultvalue>5</defaultvalue>
			</setting>
			<setting varname="vbv_post_days_old" displayorder="15">
				<datatype>free</datatype>
				<defaultvalue>7</defaultvalue>
			</setting>
			<setting varname="vbv_grp_disable" displayorder="20">
				<datatype>free</datatype>
				<optioncode>usergroup:6</optioncode>
				<defaultvalue>a:1:{i:0;i:1;}</defaultvalue>
			</setting>
			<setting varname="vbv_grp_read_only" displayorder="30">
				<datatype>free</datatype>
				<optioncode>usergroup:6</optioncode>
				<defaultvalue>a:4:{i:0;i:4;i:1;i:1;i:2;i:3;i:3;i:8;}</defaultvalue>
			</setting>
			<setting varname="vbv_grp_unvoteable" displayorder="40">
				<datatype>free</datatype>
				<optioncode>usergroup:6</optioncode>
				<defaultvalue>a:1:{i:0;i:8;}</defaultvalue>
			</setting>
			<setting varname="vbv_grp_banned" displayorder="50">
				<datatype>free</datatype>
				<optioncode>usergroup:6</optioncode>
				<defaultvalue>a:1:{i:0;i:8;}</defaultvalue>
			</setting>
			<setting varname="vbv_delete_own_votes" displayorder="60">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="vbv_enable_neg_votes" displayorder="70">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="vbv_neg_votes_expire_days" displayorder="80">
				<datatype>number</datatype>
				<defaultvalue>30</defaultvalue>
			</setting>
			<setting varname="vbv_neg_auto_report" displayorder="85">
				<datatype>posint</datatype>
				<defaultvalue>5</defaultvalue>
			</setting>
			<setting varname="vbv_top_voted_days" displayorder="90">
				<datatype>number</datatype>
				<defaultvalue>7</defaultvalue>
			</setting>
			<setting varname="vbv_ignored_forums" displayorder="100">
				<datatype>free</datatype>
			</setting>
			<setting varname="vbv_ignore_forum_childs" displayorder="110">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="vbv_enable_sg_votes" displayorder="120">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
		</settinggroup>
	</options>
	<helptopics>
	</helptopics>
	<cronentries>
	</cronentries>
	<faqentries>
	</faqentries>
	<templateedits>
	</templateedits>
</product>
